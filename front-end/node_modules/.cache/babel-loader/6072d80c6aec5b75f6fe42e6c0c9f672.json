{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080';\nexport async function login(_ref) {\n  let {\n    userEmail,\n    userPassword\n  } = _ref;\n  return axios.post(`${API_URL}/users/login`, {\n    userEmail,\n    userPassword\n  }).then(_ref2 => {\n    let {\n      data: {\n        token\n      }\n    } = _ref2;\n    return token;\n  }).catch(_ref3 => {\n    let {\n      response: {\n        data: {\n          err: {\n            message\n          }\n        }\n      }\n    } = _ref3;\n    alert(message);\n  });\n}\nexport async function getById(id) {\n  return fetch(`${API_URL}climates/${id}`).then(response => response.json()).then(data => data).catch(error => error);\n}","map":{"version":3,"sources":["/home/gui/Documentos/Projetos/Desafios_Tecnicos/desafio-ebytr/front-end/src/services/userServices.js"],"names":["axios","API_URL","login","userEmail","userPassword","post","then","data","token","catch","response","err","message","alert","getById","id","fetch","json","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,eAAeC,KAAf,OAAkD;AAAA,MAA7B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA6B;AACvD,SAAOJ,KAAK,CAACK,IAAN,CAAY,GAAEJ,OAAQ,cAAtB,EAAqC;AAAEE,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAArC,EAAkEE,IAAlE,CACL;AAAA,QAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,KAAD;AAAA,WAAyBA,KAAzB;AAAA,GADK,EAELC,KAFK,CAGL,SAAkD;AAAA,QAAjD;AAAEC,MAAAA,QAAQ,EAAE;AAAEH,QAAAA,IAAI,EAAE;AAAEI,UAAAA,GAAG,EAAE;AAAEC,YAAAA;AAAF;AAAP;AAAR;AAAZ,KAAiD;AAChDC,IAAAA,KAAK,CAACD,OAAD,CAAL;AACD,GALI,CAAP;AAOD;AAED,OAAO,eAAeE,OAAf,CAAuBC,EAAvB,EAA2B;AAChC,SAAOC,KAAK,CAAE,GAAEf,OAAQ,YAAWc,EAAG,EAA1B,CAAL,CAAkCT,IAAlC,CACJI,QAAD,IAAcA,QAAQ,CAACO,IAAT,EADT,EAELX,IAFK,CAECC,IAAD,IAAUA,IAFV,EAEgBE,KAFhB,CAEuBS,KAAD,IAAWA,KAFjC,CAAP;AAGD","sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080';\n\nexport async function login({ userEmail, userPassword }) {\n  return axios.post(`${API_URL}/users/login`, { userEmail, userPassword }).then(\n    ({ data: { token } }) => token,\n  ).catch(\n    ({ response: { data: { err: { message } } } }) => {\n      alert(message);\n    },\n  );\n}\n\nexport async function getById(id) {\n  return fetch(`${API_URL}climates/${id}`).then(\n    (response) => response.json(),\n  ).then((data) => data).catch((error) => error);\n}\n"]},"metadata":{},"sourceType":"module"}